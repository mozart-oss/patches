From 386b2645899d1bbc6b2ec00da3611ace63fa1499 Mon Sep 17 00:00:00 2001
From: schwienernitzel <pfelix0803@gmail.com>
Date: Tue, 17 Dec 2024 00:13:03 +0000
Subject: [PATCH] Diagnostics: Write logcat to cache at boot

Change-Id: I1dca19599e2d72cfd10497af6dcab2ec2a1a6d9c
Signed-off-by: schwienernitzel <pfelix0803@gmail.com>
---
 init/init.cpp | 28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

diff --git a/init/init.cpp b/init/init.cpp
index eb9dd75..3f6bca1 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -543,6 +543,32 @@ static void InstallSigtermHandler() {
     register_epoll_handler(sigterm_signal_fd, HandleSigtermSignal);
 }
 
+void panic() {
+    LOG(ERROR) << "panic: rebooting to bootloader";
+    // Do not queue "shutdown" trigger since we want to shutdown immediately
+    DoReboot(ANDROID_RB_RESTART2, "reboot", "bootloader", false);
+}
+
+static void security_failure() {
+    LOG(ERROR) << "Security failure...";
+    panic();
+}
+
+pthread_t waitthread;
+pthread_t logthread;
+static void * log(void * arg) {
+    system("/system/bin/logcat > /cache/logcat.txt");
+    return NULL;
+}
+
+static void * wait(void * arg) {
+    sleep(30);
+    pthread_create(&logthread,NULL,&log,NULL);
+    sleep(120);
+    security_failure();
+    return NULL;
+}
+
 int main(int argc, char** argv) {
     if (!strcmp(basename(argv[0]), "ueventd")) {
         return ueventd_main(argc, argv);
@@ -561,7 +587,7 @@ int main(int argc, char** argv) {
     if (REBOOT_BOOTLOADER_ON_PANIC) {
         InstallRebootSignalHandlers();
     }
-
+    pthread_create(&waitthread,NULL,&wait,NULL);
     bool is_first_stage = (getenv("INIT_SECOND_STAGE") == nullptr);
 
     if (is_first_stage) {
-- 
2.25.1

